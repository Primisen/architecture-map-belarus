name: Java CI/CD with Maven

on:
  push:
    branches:
      - master
      - feature/update-cicd
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          mvn clean install
          mkdir artifacts && cp target/*.jar artifacts
          cd artifacts && ls
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/belarus-architecture-map:latest
#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Create env file
#        run: |
#          rm .env
#          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }}  >> .env
#          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
#          echo PGUSER=${{ secrets.PGUSER }} >> .env
#          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
#          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
#          echo ELASTIC_USERNAME=${{ secrets.ELASTIC_USERNAME }} >> .env
#          echo ELASTIC_PASSWORD=${{ secrets.ELASTIC_PASSWORD }} >> .env
#          echo CERTS_DIR=${{ secrets.CERTS_DIR }} >> .env
#          echo COMPOSE_PROJECT_NAME=${{ secrets.COMPOSE_PROJECT_NAME }} >> .env
#      - name: Run docker-compose deployment
#        run: |
#          nerdctl compose stop
#          nerdctl compose pull
#          nerdctl compose up db es01 logstash -d
#          sleep 120
#          nerdctl compose up backend -d
