name: Java CI/CD with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          mvn clean install
          mkdir artifacts && cp target/*.jar artifacts
          cd artifacts && ls
      - name: Save artifact
        uses: actions/upload-artifact@v2
        with:
          name: github-action-artifact
          path: artifacts
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/belarus-architecture-map:latest
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
#      - name: Pull Image from docker hub
#        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/belarus-architecture-map:latest
#      - name: Delete old container
#        run: sudo docker rm -f belarus-architecture-map
      - name: Create env file
        run: |
            touch .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }}  >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo PGUSER=${{ secrets.PGUSER }} >> .env
            echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
      - name: Rerun and rebuild Java docker-container
#        run: cd /opt/architecture-map-belarus/src/main/docker/ && docker-compose up --detach --build backend
      - name: Stop docker-compose
        run: docker-compose down
      - name: Docker-compose build
        run: docker-compose build
      - name: Docker-compose run
        run: docker-compose  up
