name: Java CI/CD with Maven

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/am-backend:latest
      - name: Build and push logstash
        uses: docker/build-push-action@v5
        with:
          context: ./config/logstash
          file: ./config/logstash/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/am-logstash:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare artifacts
        run: |
          mkdir backend
          cp docker-compose.yaml .env.template backend/
          cp generate_certificate.sh instances.yml backend/
      - name: Deploy to EC2 instance
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}}
          REMOTE_HOST: ${{ vars.REMOTE_HOST}}
          REMOTE_USER: ${{ vars.REMOTE_USER}}
          SOURCE: "backend/"
          TARGET: "/opt/architecture-map-belarus/backend/"
          SCRIPT_AFTER: |
            #!/bin/bash
            
            set -euo pipefail
            cd /opt/test
            
            export container_exec="nerdctl"
            /bin/bash generate_certificate.sh

            nerdctl compose pull backend logstash
            nerdctl compose up db es01 -d
            sleep 100 # wait until elasticsearch is available
            nerdctl compose up backend -d
#            nerdctl compose up backend logstash -d
